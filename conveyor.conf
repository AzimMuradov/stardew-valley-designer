// This is a hashbang include. You can run the command after the #! to see what
// configuration is being extracted from the Gradle build using the Conveyor plugin.
include "#!./gradlew -q :app-desktop:printConveyorConfig"

// This enables native library extraction, which improves app startup time and robustness.
// It's optional but a good idea to have it. You can remove this if you get tired of specifying
// system properties for Java libraries with native components.
//
// See https://hydraulic.dev/blog/11-in-jar-signing.html for more.
include required("https://raw.githubusercontent.com/hydraulic-software/conveyor/master/configs/jvm/extract-native-libraries.conf")

gradle-cache = ${env.HOME}/.gradle    # Note: UNIX specific config!

// Config file documentation: https://conveyor.hydraulic.dev/latest/configs
app {
  // The base URL is where the download site will be placed. Packages will check here for updates.
  site.base-url = "localhost:3000"

  // This is optional. If not specified the last component of the rdns name will be turned into a display name.
  display-name = "Stardew Valley Designer"

  // A global identifier for the app.
  rdns-name = "io.stardewvalleydesigner"

  machines = [windows.amd64, linux.amd64.glibc]
  
    # Import all the obfuscated JARs, except the JAR that contains the platform native graphics code.
    inputs = [{
      from = app-desktop/build/compose/tmp/main-release/proguard
      remap = [
          "**"
          "-skiko-awt-runtime-*.jar"
      ]
    }]

    # Put the dropped JAR back with the right version for each platform. 
    windows.amd64.inputs = ${app.inputs} [ ${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-windows-x64/0.7.58/47955d864ac554609daa7b95a735fdbe362398fb/skiko-awt-runtime-windows-x64-0.7.58.jar ]
    linux.amd64.inputs = ${app.inputs} [ ${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-linux-x64/0.7.58/99f0e0fffce659032762f4f14255f3602128e8b1/skiko-awt-runtime-linux-x64-0.7.58.jar ]

  // Use the Compose logo as an icon and include it so we can pass it to the Window constructor.
  icons = app-desktop/src/main/resources/icon.png
  windows.inputs += TASK/rendered-icons/windows
  linux.inputs += TASK/rendered-icons/linux
}

conveyor.compatibility-level = 9

