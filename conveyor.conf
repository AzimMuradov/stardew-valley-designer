// This is a hashbang include. You can run the command after the #! to see what
// configuration is being extracted from the Gradle build using the Conveyor plugin.
include "#!./gradlew -q :app-desktop:printConveyorConfig"

// This enables native library extraction, which improves app startup time and robustness.
// It's optional but a good idea to have it. You can remove this if you get tired of specifying
// system properties for Java libraries with native components.
//
// See https://hydraulic.dev/blog/11-in-jar-signing.html for more.
include required("https://raw.githubusercontent.com/hydraulic-software/conveyor/master/configs/jvm/extract-native-libraries.conf")

gradle-cache = ${env.HOME}/.gradle # Note: UNIX specific config!

app {
  // A global identifier for the app.
  rdns-name = "io.stardewvalleydesigner"

  vcs-url = "https://github.com/AzimMuradov/stardew-valley-designer"

  display-name = "Stardew Valley Designer"
  description = "The goal of this project is to provide a finely tuned editor for designing your farm and the interior of all its buildings."
  license = "Apache-2.0"
  contact-email = "azim.muradov.dev@gmail.com"

  machines = [windows.amd64, linux.amd64.glibc]

  icons = "app-desktop/src/main/resources/icons/icon-*.png"


  // START Proguard

  # Import all the obfuscated JARs, except the JAR that contains the platform native graphics code.
  inputs = [{
    from = app-desktop/build/compose/tmp/main-release/proguard
    remap = [
      "**"
      "-skiko-awt-runtime-*.jar"
    ]
  }]

  # Put the dropped JAR back with the right version for each platform.
  linux.amd64.inputs = ${app.inputs} [${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-linux-x64/0.7.58/99f0e0fffce659032762f4f14255f3602128e8b1/skiko-awt-runtime-linux-x64-0.7.58.jar]
  windows.amd64.inputs = ${app.inputs} [${gradle-cache}/caches/modules-2/files-2.1/org.jetbrains.skiko/skiko-awt-runtime-windows-x64/0.7.58/47955d864ac554609daa7b95a735fdbe362398fb/skiko-awt-runtime-windows-x64-0.7.58.jar]

  // END Proguard


  // JVM Configurations

  jvm {
    system-properties {
      debug = false
    }
  }


  // OS Specifix Configurations

  linux {
    desktop-file."Desktop Entry".Categories = "Utility"
  }


  // Site

  site {
    github {
      oauth-token = ${env.GH_CONVEYOR}
      pages-branch = "site"
    }
  }
}

conveyor.compatibility-level = 9
